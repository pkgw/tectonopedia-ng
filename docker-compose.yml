# A small docker-compose for local development.
#
# There are no custom-built images here. Instead we use Docker volumes to point
# generic images at the right resources needed to spin up everything using local
# builds. To do this, create a `.env` file with the following settings:
#
# - TTPEDIA_MY_OS: any basic Docker image that can run your debug Rust binaries
# - TTPEDIA_DATA_PREFIX: an absolute path where the persistent data volumes will go
#   Recommended to put them in `./local/data/`.
# - TTPEDIA_BUCKET_PASSWORD: a password for bucket-storage (MinIO) authentication
# - TTPEDIA_FAKTORY_PASSWORD: a password for Faktory authentication
#
# The frontend will be exposed on http://localhost:29080/, the backend web API on
# http://localhost:29180, the backend WebSockets API on ws://localhost:29180/. The
# Faktory web UI is exported on its default port 7420.

services:
  bucket:
    image: quay.io/minio/minio:latest
    volumes:
      - minio_data:/data:rw
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: tectonopedia
      MINIO_ROOT_PASSWORD: ${TTPEDIA_BUCKET_PASSWORD}
    command: minio server /data --console-address :9001

  faktory:
    image: contribsys/faktory:1.9.3
    volumes:
      - faktory_data:/var/lib/faktory:rw
    ports:
      - "7420:7420"
    environment:
      FAKTORY_PASSWORD: ${TTPEDIA_FAKTORY_PASSWORD}
    command:  /faktory -b :7419 -w :7420 -e production
    healthcheck:
      test: [ "CMD", "wget", "-q", "http://:${TTPEDIA_FAKTORY_PASSWORD}@localhost:7420/" ]
      start_interval: 5s
      start_period: 60s
      interval: 90s
      timeout: 2s
      retries: 3

  compiler_worker:
    image: ${TTPEDIA_MY_OS}
    volumes:
      - ./backend/target/debug/ttpedia_compilerworker:/ttpedia_compilerworker:ro
      - ./defs:/defs:ro
      - tectonic_cache:/root/.cache/Tectonic
    environment:
      FAKTORY_URL: "tcp://:${TTPEDIA_FAKTORY_PASSWORD}@faktory:7419"
      TTPEDIA_BUCKET_URL: http://bucket:9000/
      TTPEDIA_BUCKET_USERNAME: tectonopedia
      TTPEDIA_BUCKET_PASSWORD: ${TTPEDIA_BUCKET_PASSWORD}
      TTPEDIA_NEXUS_URL: http://nexus_server:29280/ttpapi1/nexus
    command: bash -c "dnf install -y fontconfig libicu && /ttpedia_compilerworker /defs"
    depends_on:
      bucket:
        condition: service_started
      faktory:
        condition: service_healthy

  repo_server:
    image: ${TTPEDIA_MY_OS}
    volumes:
      - ./backend/target/debug/ttpedia_reposerver:/ttpedia_reposerver:ro
      - repo_data:/repodata:rw
    environment:
      FAKTORY_URL: "tcp://:${TTPEDIA_FAKTORY_PASSWORD}@faktory:7419"
      TTPEDIA_REPO_ALLOWED_ORIGIN: http://localhost:29080
    command: /ttpedia_reposerver /repodata
    depends_on:
      faktory:
        condition: service_healthy

  nexus_server:
    image: ${TTPEDIA_MY_OS}
    volumes:
      - ./backend/target/debug/ttpedia_nexusserver:/ttpedia_nexusserver:ro
      - nexus_data:/nexusdata:rw
    environment:
      TTPEDIA_NEXUS_ALLOWED_ORIGIN: http://localhost:29080
    command: /ttpedia_nexusserver /nexusdata

  backend_facade:
    image: nginx:1.29
    volumes:
      - ./local/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "29180:80"
    depends_on:
      - bucket
      - nexus_server
      - repo_server

  frontend:
    image: node:24
    volumes:
      - ./frontend:/app:rw
    ports:
      - "29080:3000"
    environment:
      # NB, these are what the *client* communicates with, so they're "outside
      # Docker" URLs, not "inside Docker":
      NUXT_PUBLIC_BACKEND_API_BASE: http://localhost:29180/ttpapi1
      NUXT_PUBLIC_DATA_URL: http://localhost:29180/ttpdata
      NUXT_PUBLIC_REPO_WEBSOCKETS_URL: ws://localhost:29180/ttpapi1/repo/sync
    command: |
      bash -c "cd /app && yarn dev"
    depends_on:
      - backend_facade

volumes:
  faktory_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: ${TTPEDIA_DATA_PREFIX}/faktory_data
  minio_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: ${TTPEDIA_DATA_PREFIX}/minio_data
  nexus_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: ${TTPEDIA_DATA_PREFIX}/nexus_data
  repo_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: ${TTPEDIA_DATA_PREFIX}/repo_data
  tectonic_cache:
    driver_opts:
      type: "none"
      o: "bind"
      device: ${TTPEDIA_DATA_PREFIX}/tectonic_cache
